name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CGO_ENABLED: 1

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24.5'
        cache: true

    - name: Install Dependencies
      run: |
        go install honnef.co/go/tools/cmd/staticcheck@latest
        go install github.com/securego/gosec/v2/cmd/gosec@latest

    - name: Go Format Check
      run: |
        if [ "$(gofmt -l . | wc -l)" -gt 0 ]; then
          echo "Code not formatted:"
          gofmt -l .
          exit 1
        fi

    - name: Go Vet
      run: go vet ./...

    - name: Staticcheck
      run: staticcheck ./...

    - name: Security Scan (gosec)
      run: gosec ./...

    - name: Test with Race Detection
      run: go test -race -timeout 5m -v ./...

  build:
    name: Build Matrix
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        go-version: ['1.24.5']
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go-version }}
        cache: true

    - name: Build
      run: go build -v ./...

    - name: Test (Linux/Windows)
      if: runner.os != 'macOS'
      run: go test -race -timeout 5m -v ./...

    - name: Test (macOS - Serial Execution)
      if: matrix.os == 'macos-latest'
      run: go test -v -count=1 -p=1 -timeout=10m ./...
